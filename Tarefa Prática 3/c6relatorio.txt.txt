C6.c 

1. O erro aparente é a falta da variável array->data ser atualizada com o ponteiro realocado, após o realloc(). 

2. Usando o valgrind: 

==7965== Memcheck, a memory error detector 

==7965== Copyright (C) 2002-2017, and GNU GPL'd, by Julian Seward et al. 

==7965== Using Valgrind-3.18.1 and LibVEX; rerun with -h for copyright info 

==7965== Command: ./programa6 

==7965==  

==7965== Invalid free() / delete / delete[] / realloc() 

==7965==    at 0x484B27F: free (in /usr/libexec/valgrind/vgpreload_memcheck-amd64-linux.so) 

==7965==    by 0x1092E1: main (in /mnt/d/Tarefa Prática 3/Código Original/programa6) 

==7965==  Address 0x4a8e1e0 is 0 bytes inside a block of size 40 free'd 

==7965==    at 0x484DCD3: realloc (in /usr/libexec/valgrind/vgpreload_memcheck-amd64-linux.so) 

==7965==    by 0x10927A: resizeArray (in /mnt/d/Tarefa Prática 3/Código Original/programa6) 

==7965==    by 0x1092CE: main (in /mnt/d/Tarefa Prática 3/Código Original/programa6) 

==7965==  Block was alloc'd at 

==7965==    at 0x484DA83: calloc (in /usr/libexec/valgrind/vgpreload_memcheck-amd64-linux.so) 

==7965==    by 0x1092B8: main (in /mnt/d/Tarefa Prática 3/Código Original/programa6) 

==7965==  

==7965==  

==7965== HEAP SUMMARY: 

==7965==     in use at exit: 60 bytes in 1 blocks 

==7965==   total heap usage: 4 allocs, 4 frees, 8,572 bytes allocated 

==7965==  

==7965== LEAK SUMMARY: 

==7965==    definitely lost: 60 bytes in 1 blocks 

==7965==    indirectly lost: 0 bytes in 0 blocks 

==7965==      possibly lost: 0 bytes in 0 blocks 

==7965==    still reachable: 0 bytes in 0 blocks 

==7965==         suppressed: 0 bytes in 0 blocks 

==7965== Rerun with --leak-check=full to see details of leaked memory 

==7965==  

==7965== For lists of detected and suppressed errors, rerun with: -s 

==7965== ERROR SUMMARY: 1 errors from 1 contexts (suppressed: 0 from 0) 

O valgrind mostra que houver uma tentativa de liberar uma área de memória que não foi alocada. Além disso, 60 bytes não foram liberados na função main, muito provavelmente o array->data. 

3.Para corrigir isso irei atualizar o array->data com o ponteiro realocado. 

4. 

==8115== Memcheck, a memory error detector 

==8115== Copyright (C) 2002-2017, and GNU GPL'd, by Julian Seward et al. 

==8115== Using Valgrind-3.18.1 and LibVEX; rerun with -h for copyright info 

==8115== Command: ./programa_reparado6 

==8115==  

==8115==  

==8115== HEAP SUMMARY: 

==8115==     in use at exit: 0 bytes in 0 blocks 

==8115==   total heap usage: 4 allocs, 4 frees, 8,572 bytes allocated 

==8115==  

==8115== All heap blocks were freed -- no leaks are possible 

==8115==  

==8115== For lists of detected and suppressed errors, rerun with: -s 

==8115== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 0 from 0) 

Ao atualizar o ponteiro a área de memória certa é desalocada não causando Invalid Free e não permitindo que os 60 bytes ficassem alocados indevidamente. 